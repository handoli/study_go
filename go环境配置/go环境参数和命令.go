package main

/*
go环境参数: 命令go env用于打印Go语言的环境信息
	名称			 说明
	CGO_ENABLED		指明cgo工具是否可用的标识。
	GOARCH			程序构建环境的目标计算架构。
	GOBIN			存放可执行文件的目录的绝对路径。
	GOCHAR			程序构建环境的目标计算架构的单字符标识。
	GOEXE			可执行文件的后缀。
	GOHOSTARCH		程序运行环境的目标计算架构。
	GOOS			程序构建环境的目标操作系统。
	GOHOSTOS		程序运行环境的目标操作系统。
	GOPATH			工作区目录的绝对路径。
	GORACE			用于数据竞争检测的相关选项。
	GOROOT			Go语言的安装目录的绝对路径。
	GOTOOLDIR		Go工具目录的绝对路径。
	详情查看：https://www.kancloud.cn/cattong/go_command_tutorial/261359

	重点参数解释:
		GOROOT: 
			Go语言的安装目录的绝对路径。通常在安装时环境变量会设置好GOROOT路径。
			当开发时，import标准库时并不需要额外安装，当程序运行后，也会去GOROOT路径下寻找相应程序
		GOPATH:
			工作区目录的绝对路径。包含了bin、pkg、src三个目录
			1、bin：放置编译后生成的可执行文件
				通过go install命令完成安装后，bin目录保存由Go命令源文件生成的可执行文件；
				在类 Unix 操作系统下，这个可执行文件的名称与命令源文件的文件名相同；
				在 Windows 操作系统下，这个可执行文件的名称则是命令源文件的文件名加 .exe 后缀。
			2、pkg：放置编译后生成的包/库的归档文件
				用于存放通过go install命令安装某个包后的归档文件。归档文件是指那些名称以“.a”结尾的文件;
				编译和安装项目代码的过程一般会以代码包为单位进行，
					比如:log包被编译安装后，将生成一个名为log.a的归档文件，并存放在GOPATH的pkg目录下;
				该目录与GOROOT目录下的pkg目录功能类似，GOPATH的pkg目录专门用来存放项目代码的归档文件
			3、src：放置项目和库的源文件
				用于以包（package）的形式组织并存放 Go 源文件，这里的包与 src 下的每个子目录是一一对应；
					例如：若一个源文件被声明属于 log 包，那么它就应当保存在 src/log 目录中
				需要注意的是，Go语言会把通过go get命令获取到的库源文件下载到 src 目录下对应的文件夹当中。

go命令:
	名称			 说明
	go build		命令用于编译我们指定的源码文件或代码包以及它们的依赖包。
	go install		用于编译并安装指定的代码包及它们的依赖包。
	go get			可以根据要求从互联网上下载或更新指定的代码包及其依赖包，并对它们进行编译和安装。
	go clean		删除掉执行其它命令时产生的一些文件和目录
	go run			可以编译并运行命令源码文件。
	go test			用于对Go语言编写的程序进行测试。
	go list			作用是列出指定的代码包的信息。
	go fix			把指定代码包的所有Go语言源码文件中的旧版本代码修正为新版本的代码。
	go vet			用于检查Go语言源码中静态错误的简单工具。	

*/